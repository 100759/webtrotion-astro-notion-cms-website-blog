---
import Link from "./link.astro";
import Dropdown from "./dropdown.astro";
import { Astronav, MenuItems, MenuIcon, StickyHeader } from "astro-navbar";

import ThemeToggle from "../ThemeToggle.astro";
import Search from "../Search.astro";
import { getMenu } from "@/utils";
import { siteInfo } from "@/site.config";
import { filePath } from "@/lib/blog-helpers";

const menuitems = await getMenu();

const url = new URL(Astro.request.url);

let customIconURL: string = "";
if (siteInfo.logo && siteInfo.logo.Type === "file") {
	try {
		customIconURL = filePath(new URL(siteInfo.logo.Url));
	} catch (err) {
		console.log("Invalid DB custom icon URL");
	}
}

const menuitemsold = [
	{
		title: "Features",
		path: "#",
		children: [
			{ title: "Action", path: "/" },
			{ title: "Another action", path: "#" },
			{ title: "Dropdown Submenu", path: "#" },
			{ title: "404 Page", path: "/404" },
		],
	},
	{
		title: "Pricing",
		path: "/pricing",
	},
	{
		title: "About",
		path: "/about",
	},
	{
		title: "Blog",
		path: "/blog",
	},
	{
		title: "Contact",
		path: "/contact",
	},
	{
		title: "Pro Version",
		badge: true,
		path: "https://astroship-pro.web3templates.com/",
	},
];
---

<div class="max-w-screen-xl px-5">
	<StickyHeader
		class="sticky top-0 z-20 transition-all"
		scrollY={50}
		defaultClass="py-5 border-transparent"
		activeClass="py-2 backdrop-blur-lg"
	>
		<Astronav closeOnClick>
			<div class="flex w-full items-center justify-between lg:w-auto">
				<a
					href="/"
					class="inline-flex items-center grayscale hover:filter-none sm:relative sm:inline-block"
					aria-current={url.pathname === "/" ? "page" : false}
				>
					{
						siteInfo.logo && siteInfo.logo.Type === "emoji" ? (
							<>
								<span class="sm:h-15 sm:w-15 me-3 h-10 w-10 sm:absolute sm:start-[-4.5rem] sm:me-0">
									{siteInfo.logo.Emoji}
								</span>
								<span class="text-xl font-bold sm:text-2xl">{siteInfo.title}</span>
							</>
						) : siteInfo.logo && siteInfo.logo.Type === "external" ? (
							<>
								<img
									class="sm:h-15 sm:w-15 me-3 h-10 w-10 object-contain sm:absolute sm:start-[-4.5rem] sm:me-0"
									src={siteInfo.logo.Url}
								/>
								<span class="text-xl font-bold sm:text-2xl">{siteInfo.title}</span>
							</>
						) : siteInfo.logo && siteInfo.logo.Type === "file" && customIconURL ? (
							<>
								<img
									src={customIconURL}
									class="sm:h-15 sm:w-15 me-3 h-10 w-10 object-contain sm:start-[-4.5rem] sm:me-0"
								/>
								<span class="text-xl font-bold sm:text-2xl">{siteInfo.title}</span>
							</>
						) : (
							<span class="text-xl font-bold sm:text-2xl">{siteInfo.title}</span>
						)
					}
				</a>
				<div class="block lg:hidden">
					<MenuIcon class="h-4 w-4 text-gray-800" />
				</div>
			</div>
			<MenuItems class="mt-2 hidden w-full lg:mt-0 lg:flex lg:w-auto">
				<ul class="flex flex-col lg:flex-row lg:gap-3">
					{
						menuitems.map((item, index) => (
							<>
								{item.children && (
									<Dropdown
										title={item.title}
										children={item.children}
										lastItem={index === menuitems.length - 1}
									/>
								)}

								{!item.children && (
									<li>
										<a
											href={item.path}
											class="flex items-center py-2 text-gray-600 hover:text-gray-900 lg:px-3"
										>
											<span> {item.title}</span>
											{item.badge && (
												<span class="ml-1 animate-pulse rounded-full bg-indigo-600 px-2 py-0.5 text-[10px] font-semibold uppercase text-white">
													New
												</span>
											)}
										</a>
									</li>
								)}
							</>
						))
					}
				</ul>
				<div class="mt-3 flex items-center gap-4 lg:hidden">
					<Link href="#" style="muted" block size="md">Log in</Link>
					<Link href="#" size="md" block>Sign up</Link>
				</div>
			</MenuItems>
		</Astronav>
		<div>
			<div class="hidden items-center gap-4 lg:flex">
				<a href="#">Log in</a>
				<Link href="#" size="md">Sign up</Link>
			</div>
		</div>
	</StickyHeader>
</div>
