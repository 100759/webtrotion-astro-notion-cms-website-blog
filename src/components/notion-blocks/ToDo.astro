---
import * as interfaces from "../../lib/interfaces.ts";
import { convertToTailwindColor } from "../../lib/style-helpers.ts";
import RichText from "./RichText.astro";
import NotionBlocks from "../NotionBlocks.astro";

export interface Props {
	block: interfaces.Block;
	headings: interfaces.Block[];
}

const { block, headings } = Astro.props;
---

<div class="to-do">
	{
		block.ListItems.filter((b: interfaces.Block) => b.Type === "to_do").map(
			(b: interfaces.Block) => (
				<div class={convertToTailwindColor(b.ToDo.Color)}>
					<input
						type="checkbox"
						checked={b.ToDo.Checked}
						disabled
						class="dark:ring-offset-gray-800 h-4 w-4 rounded border-gray-300 bg-gray-100 text-blue-600 focus:ring-2 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:focus:ring-blue-600"
					/>
					{b.ToDo.RichTexts.map((richText: interfaces.RichText) => {
						if (b.ToDo.Checked) {
							return (
								<s>
									<RichText richText={richText} />
								</s>
							);
						}
						return <RichText richText={richText} />;
					})}
					{b.HasChildren && <NotionBlocks blocks={b.ToDo.Children} headings={headings} />}
				</div>
			),
		)
	}
</div>

<style>
	.to-do {
		/* color: #222; */
		font-weight: 400;
		font-size: 1rem;
		line-height: 1.8rem;
		padding-inline-start: 1rem;
	}
</style>
