---
import * as interfaces from "../../lib/interfaces.ts";
import { convertToTailwindColor, convertToTailwindColorForBorder } from "../../lib/style-helpers.ts";
import RichText from "./RichText.astro";
import NotionBlocks from "../NotionBlocks.astro";

export interface Props {
	block: interfaces.Block;
	headings: interfaces.Block[];
}

const { block, headings } = Astro.props;
---
<div class={`flex my-2 mx-auto py-4 px-3 w-full leading-6 rounded border ${convertToTailwindColor(block.Callout.Color)} ${convertToTailwindColorForBorder(block.Callout.Color)}`}>
    <div class="m-0 leading-6 mr-2">
        {
            block.Callout.Icon.Type === "emoji" ? (
                block.Callout.Icon.Emoji
            ) : block.Callout.Icon.Type === "external" ? (
                <img src={block.Callout.Icon.Url} class="w-5 h-5 max-w-none" />
            ) : null
        }
    </div>
    <div class="m-0 leading-6">
        {
            block.Callout.RichTexts.map((richText: interfaces.RichText) => (
                <RichText richText={richText} />
            ))
        }
        {block.Callout.Children && <NotionBlocks blocks={block.Callout.Children} headings={headings} />}
    </div>
</div>
