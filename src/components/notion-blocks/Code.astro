---
import Prism from "prismjs";
import "prismjs/components/prism-css";
import "prismjs/components/prism-diff";
import "prismjs/components/prism-docker";
import "prismjs/components/prism-elixir";
import "prismjs/components/prism-go";
import "prismjs/components/prism-hcl";
import "prismjs/components/prism-java";
import "prismjs/components/prism-json";
import "prismjs/components/prism-python";
import "prismjs/components/prism-ruby";
import "prismjs/components/prism-sql";
import "prismjs/components/prism-typescript";
import "prismjs/components/prism-yaml";
import 'prismjs/components/prism-latex'
import 'prismjs/components/prism-markdown'
import 'prismjs/components/prism-markup'
import 'prismjs/components/prism-json'
import * as interfaces from "../../lib/interfaces";
import Caption from "./Caption.astro";

export interface Props {
	block: interfaces.Block;
}

const { block } = Astro.props


const code = block.Code.RichTexts.map(
	(richText: interfaces.RichText) => richText.Text.Content,
).join("");
const language = block.Code.Language.toLowerCase();
const grammar = Prism.languages[language.toLowerCase()] || Prism.languages.javascript;
---

<div class="code w-full mb-1 font-mono relative">
	<div class="bg-gray-100 rounded">
		{
			language === 'mermaid' ? (
        <>
          <div class="flex">
            <button class="copy border-0 p-2 cursor-pointer absolute top-0 right-0" data-code={code} >
              <svg class="inline h-5 w-5 transition-colors duration-300 svg-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                  <path fill="currentColor" d="M19 21H8V7h11m0-2H8a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2m-3-4H4a2 2 0 0 0-2 2v14h2V3h12V1Z"/>
              </svg>
            </button>
          </div>
         <pre class="mermaid p-2">{code}</pre>
        </>
      ) : (
        <>
          <div class="flex">
            <button class="copy border-0 p-2 cursor-pointer absolute top-0 right-0" data-code={code} >
              <svg class="inline h-5 w-5 transition-colors duration-300 svg-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                  <path fill="currentColor" d="M19 21H8V7h11m0-2H8a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2m-3-4H4a2 2 0 0 0-2 2v14h2V3h12V1Z"/>
              </svg>
            </button>
          </div>
          <pre class="whitespace-pre-wrap p-2 overflow-auto"><code set:html={Prism.highlight(code, grammar, language)} /></pre>
        </>
      )
		}
	</div>
	<Caption richTexts={block.Code.Caption} />
</div>


<script>
	import mermaid from "mermaid";
	mermaid.initialize({ startOnLoad: true, theme: "neutral" });
</script>

<script>
  document.querySelectorAll("button.copy").forEach((button) => {
  button.addEventListener("click", (ev) => {
    const svg = button.querySelector('.svg-icon path');
    const code = ev.currentTarget.getAttribute("data-code");
    navigator.clipboard.writeText(code);
    if (svg) {
      svg.setAttribute("fill", "green");
      setTimeout(() => {
        svg.setAttribute("fill", "currentColor");
      }, 3000);
    }
  });
});
</script>
