---
import * as interfaces from "../../lib/interfaces.ts";
import { convertToTailwindColor } from "../../lib/style-helpers.ts";
import RichText from "./RichText.astro";
import NotionBlocks from "../NotionBlocks.astro";

export interface Props {
	block: interfaces.Block;
	headings: interfaces.Block[];
}

const { block, headings } = Astro.props;
---

<details class={`toggle group ${convertToTailwindColor(block.Toggle.Color)}`}>
	<summary class="flex cursor-pointer list-none gap-2">
    <div>
    <svg class="-rotate-90  mt-1 transform transition-all duration-300 group-open:rotate-180" fill="none" height="20" width="20" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24">
      <polyline points="6 9 12 15 18 9"></polyline>
    </svg>
  </div>
  <div>
		{

			block.Toggle.RichTexts.map((richText: interfaces.RichText) => (
				<RichText richText={richText} />
			))

		}
    </div>
	</summary>
	<div class="pl-10">
		<NotionBlocks blocks={block.Toggle.Children} headings={headings} />
	</div>
</details>

<style>
	.toggle > summary > a {
		display: inline;
	}
</style>
