---
import * as interfaces from "../../../lib/interfaces.ts";
import { isYouTubeURL, parseYouTubeVideoId } from "../../../lib/blog-helpers.ts";
import Caption from "../Caption.astro";
import { filePath } from "../../../lib/blog-helpers";
import EmbedGeneric from "./EmbedGeneric.astro";

export interface Props {
	block: interfaces.Block;
}

const { block } = Astro.props;

let url: URL | null = null;
let videoUrl = "";
if (block.Video.External) {
	videoUrl = block.Video.External?.Url;
	url = new URL(block.Video.External?.Url);
} else if (block.Video.File) {
	videoUrl = filePath(new URL(block.Video.File.Url));
}
---

<div class="video">
	{
		videoUrl &&
			(url ? (
				isYouTubeURL(url) ? (
					<iframe
						class="max-w-sm:h-[220px] h-[340px] w-full"
						src={`https://www.youtube.com/embed/${parseYouTubeVideoId(url)}`}
						title="YouTube video player"
						allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
						allowfullscreen
					/>
				) : (
					<EmbedGeneric url={url} />
				)
			) : (
				<video class="max-w-sm:h-[220px] h-[340px] w-full" controls>
					<source src={videoUrl} type="video/mp4" />
					Your browser does not support the video tag.
				</video>
			))
	}
	<Caption richTexts={block.Video.Caption} block={block} />
</div>
