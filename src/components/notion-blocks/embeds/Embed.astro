---
import * as interfaces from '../../../lib/interfaces.ts'
import {
  isTweetURL,
  isTikTokURL,
  isInstagramURL,
  isPinterestURL,
  isCodePenURL,
  isSpotifyURL,
  isEmbeddableURL
} from '../../../lib/blog-helpers.ts'
import Caption from "../Caption.astro";

import Bookmark from './Bookmark.astro'
import TweetEmbed from './TweetEmbed.astro'
import TikTokEmbed from './TikTokEmbed.astro'
import InstagramEmbed from './InstagramEmbed.astro'
import PinterestEmbed from './PinterestEmbed.astro'
import CodePenEmbed from './CodePenEmbed.astro'
import EmbedGeneric from './EmbedGeneric.astro'
import SpotifyEmbed from './SpotifyEmbed.astro'

export interface Props {
  block: interfaces.Block
  urlMap: { [key: string]: string }
}
const { block, urlMap } = Astro.props
let url: URL
try {
  url = new URL(block.Embed.Url)
} catch (err) {
  console.log(err)
}
---
<div class="embedded-info pb-2">
{
  url ? (
    isTweetURL(url) ? (
      <TweetEmbed url={url} />
    ) : isTikTokURL(url) ? (
      <TikTokEmbed url={url} />
    ) : isInstagramURL(url) ? (
      <InstagramEmbed url={url} />
    ) : isPinterestURL(url) ? (
      <PinterestEmbed url={url} />
    ) : isCodePenURL(url) ? (
      <CodePenEmbed url={url} />
    ) : isSpotifyURL(url)? (
    <SpotifyEmbed url={url} />
      ): await isEmbeddableURL(url) ? (
      <EmbedGeneric url={url} />
    ): (
      <Bookmark block={block} urlMap={urlMap} />
    )
  ) : null
}
<Caption richTexts={block.Embed?.Caption}  block={block}/>
</div>

<style>
  #instagram-embed-0{
    min-width: unset !important;
  }
</style>
